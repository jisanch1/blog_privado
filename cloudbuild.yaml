# my_private_blog/cloudbuild.yaml

# Las variables de entorno de Cloud Build, como $PROJECT_ID y $COMMIT_SHA, se inyectan automáticamente.
# La región se define aquí directamente. (us-central1)
steps:
# 1. Construir la imagen Docker
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Docker Image'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/private-blog-django:$COMMIT_SHA', '.'] # <-- $PROJECT_ID aquí

# 2. Empujar la imagen al Google Container Registry (GCR)
- name: 'gcr.io/cloud-builders/docker'
  id: 'Push to GCR'
  args: ['push', 'gcr.io/$PROJECT_ID/private-blog-django:$COMMIT_SHA'] # <-- $PROJECT_ID aquí

# 3. Ejecutar migraciones de la base de datos en Cloud SQL
# Las variables para la base de datos se obtendrán de Secret Manager
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Run Migrations'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # No es necesario gcloud config set project $PROJECT_ID aquí, Cloud Build ya lo sabe por el contexto
    wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O /usr/local/bin/cloud_sql_proxy && chmod +x /usr/local/bin/cloud_sql_proxy
    # Iniciar el proxy en segundo plano con el nombre de conexión del secreto
    /usr/local/bin/cloud_sql_proxy -instances="${_CLOUD_SQL_CONNECTION_NAME}"=tcp:5432 &
    sleep 5
    cd /workspace
    pip install -r requirements.txt # Instala dependencias para migrate
    export DATABASE_URL="postgres://${_DB_USER}:${_DB_PASSWORD}@127.0.0.1:5432/${_DB_NAME}"
    python manage.py migrate --noinput
  secretEnv: ['_DB_USER', '_DB_PASSWORD', '_DB_NAME', '_CLOUD_SQL_CONNECTION_NAME']

# 4. Desplegar el servicio en Cloud Run
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Deploy to Cloud Run'
  args:
  - 'run'
  - 'deploy'
  - 'private-blog-service' # Nombre de tu servicio Cloud Run
  - '--image=gcr.io/$PROJECT_ID/private-blog-django:$COMMIT_SHA' # <-- $PROJECT_ID aquí
  - '--region=us-central1' # Región de tu proyecto
  - '--platform=managed'
  - '--allow-unauthenticated'
  - '--port=8080'
  - '--add-cloudsql-instances=${_CLOUD_SQL_CONNECTION_NAME}' # Se obtiene del secreto
  - '--service-account=cloud-build-deployer@$PROJECT_ID.iam.gserviceaccount.com' # <-- $PROJECT_ID aquí para la cuenta de servicio
  env: # Variables de entorno para la aplicación Django en Cloud Run
  - 'DEBUG=False' # Esto no es un secreto, puede estar aquí
  - 'DATABASE_URL=postgres://${_DB_USER_APP}:${_DB_PASSWORD_APP}@/${_DB_NAME_APP}?host=/cloudsql/${_CLOUD_SQL_CONNECTION_NAME_APP}' # Construye la URL de DB para la app
  secretEnv: ['SECRET_KEY', '_DB_USER_APP', '_DB_PASSWORD_APP', '_DB_NAME_APP', '_CLOUD_SQL_CONNECTION_NAME_APP']

# Declaración de cómo Cloud Build debe acceder a los secretos de Secret Manager
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/django-secret-key-prod/versions/latest # <-- $PROJECT_ID aquí
    env: 'SECRET_KEY'
  - versionName: projects/$PROJECT_ID/secrets/db-user/versions/latest # <-- $PROJECT_ID aquí
    env: '_DB_USER'
  - versionName: projects/$PROJECT_ID/secrets/db-password/versions/latest # <-- $PROJECT_ID aquí
    env: '_DB_PASSWORD'
  - versionName: projects/$PROJECT_ID/secrets/db-name/versions/latest # <-- $PROJECT_ID aquí
    env: '_DB_NAME'
  - versionName: projects/$PROJECT_ID/secrets/cloud-sql-connection-name/versions/latest # <-- $PROJECT_ID aquí
    env: '_CLOUD_SQL_CONNECTION_NAME'

  # Mappings para las variables que se inyectarán en el servicio Cloud Run
  - versionName: projects/$PROJECT_ID/secrets/db-user/versions/latest # <-- $PROJECT_ID aquí
    env: '_DB_USER_APP'
  - versionName: projects/$PROJECT_ID/secrets/db-password/versions/latest # <-- $PROJECT_ID aquí
    env: '_DB_PASSWORD_APP'
  - versionName: projects/$PROJECT_ID/secrets/db-name/versions/latest # <-- $PROJECT_ID aquí
    env: '_DB_NAME_APP'
  - versionName: projects/$PROJECT_ID/secrets/cloud-sql-connection-name/versions/latest # <-- $PROJECT_ID aquí
    env: '_CLOUD_SQL_CONNECTION_NAME_APP'

# Opciones de Log
options:
  logging: CLOUD_LOGGING_ONLY # Le dice a Cloud Build que envíe los logs solo a Cloud Logging (Stackdriver)
  # logsBucket: 'gs://YOUR_PROJECT_ID_cloudbuild_logs' # Opcional: si quieres un bucket específico.